/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.Color;
import java.awt.event.ItemListener;
import java.util.Random;
import javax.swing.JOptionPane;

public class addRoom extends javax.swing.JFrame {

    /**
     * Creates new form addRoom
     */
    public addRoom() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        roomIDtxt = new javax.swing.JTextField();
        roomNotxt = new javax.swing.JTextField();
        floorTxt = new javax.swing.JTextField();
        capacityTxt = new javax.swing.JTextField();
        typeLst = new javax.swing.JComboBox<>();
        labRoomlbl = new javax.swing.JLabel();
        pcsLbl = new javax.swing.JLabel();
        osLbl = new javax.swing.JLabel();
        pcsTxt = new javax.swing.JTextField();
        operatingLst = new javax.swing.JComboBox<>();
        lectureHalllbl = new javax.swing.JLabel();
        microphoneLbl = new javax.swing.JLabel();
        seatingLbl = new javax.swing.JLabel();
        microphoneLst = new javax.swing.JComboBox<>();
        seatingLst = new javax.swing.JComboBox<>();
        submitBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Mongolian Baiti", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Add Room");

        backBtn.setText("Go Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Room ID:");

        jLabel3.setText("Room Number:");

        jLabel4.setText("Floor:");

        jLabel5.setText("Capacity:");

        jLabel6.setText("Type:");

        typeLst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lab Room", "Lecture Hall" }));
        typeLst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeLstItemStateChanged(evt);
            }
        });
        typeLst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                typeLstFocusLost(evt);
            }
        });
        typeLst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeLstActionPerformed(evt);
            }
        });

        labRoomlbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labRoomlbl.setText("Lab Room:");

        pcsLbl.setText("No. of PCs:");

        osLbl.setText("Operating System:");

        pcsTxt.setForeground(new java.awt.Color(255, 255, 255));
        pcsTxt.setText("1");
        pcsTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pcsTxtFocusGained(evt);
            }
        });

        operatingLst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Windows", "macOS", "Linux" }));

        lectureHalllbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lectureHalllbl.setText("Lecture Hall:");

        microphoneLbl.setText("Microphone Type:");

        seatingLbl.setText("Tiered Seating:");

        microphoneLst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Condenser", "Dynamic", "Ribbon" }));

        seatingLst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        submitBtn.setBackground(new java.awt.Color(255, 204, 204));
        submitBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        submitBtn.setText("SUBMIT");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)
                        .addComponent(exitBtn)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(backBtn)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(floorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomNotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(capacityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeLst, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lectureHalllbl)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(seatingLbl)
                        .addGap(37, 37, 37)
                        .addComponent(seatingLst, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labRoomlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(osLbl)
                            .addComponent(pcsLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(operatingLst, 0, 97, Short.MAX_VALUE)
                            .addComponent(pcsTxt)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(microphoneLbl)
                        .addGap(18, 18, 18)
                        .addComponent(microphoneLst, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBtn))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labRoomlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roomNotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(floorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pcsLbl)
                            .addComponent(pcsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(osLbl)
                            .addComponent(operatingLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lectureHalllbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capacityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(microphoneLbl)
                    .addComponent(microphoneLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seatingLbl)
                            .addComponent(seatingLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn)
                        .addGap(44, 44, 44))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(54, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(591, 479));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //back button method
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // Create a new instance of the roomMenu class
        roomMenu obj = new roomMenu();

        // Set the roomMenu window to be visible
        obj.setVisible(true);

        // Hide the current window (addRoom window)
        this.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        // Hide specific labels and lists when the window (addRoom) is opened
        this.lectureHalllbl.setVisible(false);
        this.microphoneLbl.setVisible(false);
        this.microphoneLst.setVisible(false);
        this.seatingLbl.setVisible(false);
        this.seatingLst.setVisible(false);

        // Generate a random room ID and set it in the roomIDtxt field
        Random random = new Random();
        int rand = random.nextInt(99999);
        String roomID = "RM-" + rand;
        this.roomIDtxt.setText(roomID);

    }//GEN-LAST:event_formWindowOpened
    private addRoom exit;
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // Create a new instance of the addRoom class
        exit = new addRoom();

        // Display a confirmation dialog asking the user if they want to exit
        if (JOptionPane.showConfirmDialog(exit, "Confirm if you want to exit", "Booking System", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            // If the user confirms (chooses "Yes"), exit the application
            System.exit(0);
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void typeLstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeLstFocusLost

    }//GEN-LAST:event_typeLstFocusLost

    private void typeLstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeLstActionPerformed


    }//GEN-LAST:event_typeLstActionPerformed

    private void typeLstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeLstItemStateChanged
        // Check if the selected item in the typeLst dropdown is "Lab Room"
        if (typeLst.getSelectedItem().equals("Lab Room")) {
            // Show specific components related to lab rooms and hide others
            this.operatingLst.setVisible(true);
            this.osLbl.setVisible(true);
            this.pcsLbl.setVisible(true);
            this.pcsTxt.setVisible(true);
            this.labRoomlbl.setVisible(true);
            this.lectureHalllbl.setVisible(false);
            this.microphoneLbl.setVisible(false);
            this.microphoneLst.setVisible(false);
            this.seatingLbl.setVisible(false);
            this.seatingLst.setVisible(false);
        } else {
            // Show specific components related to lecture halls and hide others
            this.lectureHalllbl.setVisible(true);
            this.microphoneLbl.setVisible(true);
            this.microphoneLst.setVisible(true);
            this.seatingLbl.setVisible(true);
            this.seatingLst.setVisible(true);
            this.operatingLst.setVisible(false);
            this.osLbl.setVisible(false);
            this.pcsLbl.setVisible(false);
            this.pcsTxt.setVisible(false);
            this.labRoomlbl.setVisible(false);
        }
    }//GEN-LAST:event_typeLstItemStateChanged

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed

        // Get input values from text fields
        String roomID = roomIDtxt.getText();
        String roomNumberStr = roomNotxt.getText();
        String floorStr = floorTxt.getText();
        String capacityStr = capacityTxt.getText();

        try {
            // Parse input strings to integers
            int roomNumber = Integer.parseInt(roomNumberStr);
            int floor = Integer.parseInt(floorStr);
            int capacity = Integer.parseInt(capacityStr);

            // Check if the roomID already exists in lectureHalllst or labRoomlst
            for (roomClass room : AppLib.lectureHalllst) {
                if (room.getRoomID().equals(roomID)) {
                    JOptionPane.showMessageDialog(rootPane, "***RoomID already exists***\nPlease try again", "Error Message", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            for (roomClass room : AppLib.labRoomlst) {
                if (room.getRoomID().equals(roomID)) {
                    JOptionPane.showMessageDialog(rootPane, "***RoomID already exists***\nPlease try again", "Error Message", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Validate roomNumber, floor, and capacity against specific criteria
            if (roomNumber > 10 || roomNumber < 1) {
                JOptionPane.showMessageDialog(rootPane, "Room number must be between 1 and 10", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (floor < 1 || floor > 3) {
                JOptionPane.showMessageDialog(rootPane, "Floor Number must be between 1 and 3", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (capacity < 1 || capacity > 30) {
                JOptionPane.showMessageDialog(rootPane, "Capacity must be between 1 and 30", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Get selected room type from typeLst dropdown
            String roomType = typeLst.getSelectedItem().toString();

            if (roomType.equals("Lab Room")) {
                // Validate number of PCs for lab rooms
                String pcsStr = pcsTxt.getText();
                int numberPCs = Integer.parseInt(pcsStr);
                if (numberPCs < 1 || numberPCs > 30) {
                    JOptionPane.showMessageDialog(rootPane, "Number of PCs must be between 1 and 30", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Create and add a new labRoom object to labRoomlst
                String operatingSystem = operatingLst.getSelectedItem().toString();
                labRoom obj = new labRoom(roomID, roomNumber, floor, capacity, numberPCs, operatingSystem);
                AppLib.labRoomlst.add(obj);

                // Display success message
                JOptionPane.showMessageDialog(rootPane, "***Room added Successfully***\n"
                        + "Room ID: " + roomID + "\nRoom Number: " + roomNumber + "\nFloor: " + floor
                        + "\nCapacity: " + capacity + "\nType: " + roomType + "\nNumber of PC's: " + numberPCs
                        + "\nOperating System: " + operatingSystem);
            } else if (roomType.equals("Lecture Hall")) {
                // Create and add a new lectureHall object to lectureHalllst
                String microphoneType = microphoneLst.getSelectedItem().toString();
                String tieredSeating = seatingLst.getSelectedItem().toString();
                lectureHall obj = new lectureHall(roomID, roomNumber, floor, capacity, microphoneType, tieredSeating);
                AppLib.lectureHalllst.add(obj);

                // Display success message
                JOptionPane.showMessageDialog(rootPane, "***Room added Successfully***\n"
                        + "Room ID: " + roomID + "\nRoom Number: " + roomNumber + "\nFloor: " + floor
                        + "\nCapacity: " + capacity + "\nType: " + roomType + "\nMicrophone Type: " + microphoneType
                        + "\nTiered Seating: " + tieredSeating);
            }
        } catch (NumberFormatException e) {
            // Catch NumberFormatException if input values are not valid integers
            JOptionPane.showMessageDialog(rootPane, "Please enter valid numerical values", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_submitBtnActionPerformed

    private void pcsTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pcsTxtFocusGained
        
        pcsTxt.setText("");
        pcsTxt.setForeground(Color.black);
    }//GEN-LAST:event_pcsTxtFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField capacityTxt;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField floorTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labRoomlbl;
    private javax.swing.JLabel lectureHalllbl;
    private javax.swing.JLabel microphoneLbl;
    private javax.swing.JComboBox<String> microphoneLst;
    private javax.swing.JComboBox<String> operatingLst;
    private javax.swing.JLabel osLbl;
    private javax.swing.JLabel pcsLbl;
    private javax.swing.JTextField pcsTxt;
    private javax.swing.JTextField roomIDtxt;
    private javax.swing.JTextField roomNotxt;
    private javax.swing.JLabel seatingLbl;
    private javax.swing.JComboBox<String> seatingLst;
    private javax.swing.JButton submitBtn;
    private javax.swing.JComboBox<String> typeLst;
    // End of variables declaration//GEN-END:variables
}
